{"mappings":"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","sources":["src/index.js","src/js/api/fetchWeekly.js","src/js/refs/weeklyRefs.js","src/js/utils/weeklyUtils.js","src/js/markup/weeklyMarkup.js","src/js/components/weekly.js","src/js/components/upcoming.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/hero';\nimport './js/components/weekly';\nimport './js/components/upcoming';\nimport './js/components/modal';\nimport './js/components/footer';\n","//FETCH\nimport { BASE_URL } from './apiKey';\n\nasync function fetchData(END_POINT, options) {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT}`, options);\n    const data = await response.json();\n    return data.results.slice(0, 3);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchGenres(options) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}genre/movie/list?language=en`,\n      options\n    );\n    const data = await response.json();\n    return data.genres;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport { fetchData };\nexport { fetchGenres };\n","const weeklyUlRef = document.querySelector('.weekly-list');\nexport { weeklyUlRef };\n","function transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n  return transformedMovies;\n}\n\nexport { transformData };\n","import { transformData } from '../utils/weeklyUtils';\n\nfunction renderMarkup(movieData, genreData) {\n  const transformedData = transformData(movieData, genreData);\n\n  return generateMarkup(transformedData);\n}\n\nfunction addMarkup(element, markup) {\n  element.innerHTML = markup;\n}\n\nfunction generateMarkup(data) {\n  const markup = data\n    .map(\n      movie => ` \n        <li class=\"weekly-item\" data-id=\"${movie.id}\">\n          <a class=\"weekly-link link\" href=\"\">\n              <img class=\"weekly-poster-list\" src=\"https://image.tmdb.org/t/p/w500/${\n                movie.poster\n              }\" alt=\"${movie.title}\" />       \n          <div class=\"weekly-info\">\n              <h2 class=\"weekly-info-title\">${movie.title}</h2>\n                  <div class=\"info-movie\">\n                      <p class=\"weekly-info-genre\">${movie.genreFirst},&nbsp ${\n        movie.genreSecond\n      }&nbsp ‚ñè</p>\n                      <p class=\"weekly-info-date\">${movie.release_date.slice(\n                        0,\n                        4\n                      )}</p>\n                  </div>\n          </div></a>     \n      </li>\n       `\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { renderMarkup, addMarkup, generateMarkup };\n","import { fetchData } from '../api/fetchWeekly';\nimport { fetchGenres } from '../api/fetchWeekly';\nimport { weeklyUlRef } from '../refs/weeklyRefs';\nimport { options } from '../api/apiKey';\nimport { selectMovie } from './modal';\n\nimport { renderMarkup, addMarkup } from '../markup/weeklyMarkup';\n\nconst END_POINT = 'trending/all/week?language=en-US';\n\n// WORKSPACE\n\nwindow.addEventListener('load', onPageLoad);\n\n// LISTENERS\nfunction onPageLoad() {\n  const genrePromise = fetchGenres(options);\n\n  fetchData(END_POINT, options).then(movieData => {\n    //console.log(movieData);\n\n    genrePromise.then(genreData => {\n      const markup = renderMarkup(movieData, genreData);\n      addMarkup(weeklyUlRef, markup);\n      weeklyUlRef.addEventListener('click', selectMovie);\n    });\n  });\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT_UPCOMING = 'movie/upcoming';\nconst END_POINT_GENRE = 'genre/movie/list?language=en';\nconst API_KEY = 'api_key=bd0a4499e3f0b036025d12595397227a';\n\nconst upcomingList = document.querySelector('.upcoming-response-content-js');\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZDBhNDQ5OWUzZjBiMDM2MDI1ZDEyNTk1Mzk3MjI3YSIsInN1YiI6IjY0N2YxZDM3Y2FlZjJkMDEzNjJjZDBjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.04GEOyHwNXnOZB4gUWNaiyPlLlOZ0z9Ttfl7T5UFMuk',\n  },\n};\n\nasync function fetchGenres() {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT_GENRE}`, options);\n    const data = await response.json();\n\n    return data.genres;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchData() {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT_UPCOMING}`, options);\n    const data = await response.json();\n\n    return data.results[Math.floor(Math.random() * data.results.length)];\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchMovieDetails() {\n  const movie = await fetchData();\n  const genreData = await fetchGenres();\n\n  movie.genres = movie.genre_ids\n    .map(id => genreData.find(genre => genre.id === id).name)\n    .slice(0, 2)\n    .join(', ');\n\n  return movie;\n}\n\nfunction createMarkup(movie) {\n  let textContent = movie.overview;\n  if (movie.overview.length > 300) {\n    textContent = movie.overview.split('').slice(0, 300).join('') + '...';\n  }\n  const message = `<h3 class=\"upcoming-alert\">Ops! No upcoming films...</h3>`;\n  let filmContent = `\n  \n  <div class =\"upcoming-section-wrap\">\n  \n    <picture class=\"upcoming-poster\">\n        <source media=\"(min-width:768px)\" srcset=\"https://image.tmdb.org/t/p/original${\n          movie.backdrop_path\n        }\">\n        <img src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"poster_path\" style=\"width:auto;\">\n    </picture>\n\n    <div>\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"info-film\">\n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Release date</p>\n                <p class=\"info-film-resp-release-date\">${movie.release_date.replace(\n                  /^(\\d+)-(\\d+)-(\\d+)$/,\n                  `$3.$2.$1`\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Vote / Votes</p>\n                <p class=\"info-film-votes-count\"><span>${\n                  movie.vote_average\n                }</span><b>/</b><span>${movie.vote_count}</span></p>\n              </div>\n            </div>\n            \n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Popularity</p>\n                <p class=\"info-film-popularity text-color-white\">${Number(\n                  movie.popularity.toFixed(1)\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Genre</p>\n                <p class=\"info-film-genre-style text-color-white genre-padding-bottom\">${\n                  movie.genres\n                }</p>\n              </div>\n            </div> \n             \n        </div>\n    \n        <div class =\"info-film-overview\">\n      <h3 class=\"film-description-title\">ABOUT</h3>\n      <p class=\"film-description\">${textContent}</p>\n      <button class=\"btn\">add to my library</button>\n      </div>\n    </div>\n  </div>`;\n\n  return !movie.results ? filmContent : message;\n}\n\nwindow.addEventListener('load', onPageLoad);\n\nfunction onPageLoad() {\n  fetchMovieDetails().then(movie => {\n    upcomingList.insertAdjacentHTML('beforeend', createMarkup(movie));\n  });\n}\n\n{\n  /* <div>\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"info-film\">\n            <div>\n              <div class=\"info-film-item\">\n                <p>Release date</p>\n                <p class=\"release-date\">${(movie.release_date).replace(/^(\\d+)-(\\d+)-(\\d+)$/, `$3.$2.$1`)}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p>Vote / Votes</p>\n                <p class=\"votes-count\"><span>${movie.vote_average}</span><b>/</b><span>${movie.vote_count}</span></p>\n              </div>\n            </div>\n            \n            <div>\n              <div class=\"info-film-item\">\n                <p>Popularity</p>\n                <p class=\"text-color-white\">${(Number(movie.popularity.toFixed(1)))}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p>Genre</p>\n                <p class=\"genre-style text-color-white\">${movie.genres}</p>\n              </div>\n            </div> \n             \n        </div>\n    \n  \n      <h3 class=\"film-description-title\">ABOUT</h3>\n      <p class=\"film-description\">${textContent}</p>\n      <button class=\"btn\">add to my library</button>\n    </div>\n  </div>`;\n\n\n */\n}\n"],"names":["parcelRequire","$bkYP9","async","$bce748f2d8dfedab$export$8134c072fddab6a5","END_POINT","options","response","fetch","BASE_URL","json","results","slice","error","console","log","message","$bce748f2d8dfedab$export$e95d448b93b2cdb","genres","$164d1c149efb33c5$export$1e4302467ae64eb8","document","querySelector","$3b8d5ab2bfa9425f$export$3ceb62baab058c6b","movieData","genreData","map","movie","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$add57ff5b89d9e56$export$add40575555c273c","transformedData","join","$add57ff5b89d9e56$export$485cc6bdae71a787","element","markup","innerHTML","window","addEventListener","genrePromise","then","$8IXMh","selectMovie","$2278764e9f3f2129$var$upcomingList","$2278764e9f3f2129$var$options","method","headers","accept","Authorization","$2278764e9f3f2129$var$fetchMovieDetails","data","Math","floor","random","length","$2278764e9f3f2129$var$fetchData","$2278764e9f3f2129$var$fetchGenres","insertAdjacentHTML","textContent","overview","split","filmContent","backdrop_path","replace","vote_average","vote_count","Number","popularity","toFixed","$2278764e9f3f2129$var$createMarkup"],"version":3,"file":"index.77ab8ac5.js.map"}