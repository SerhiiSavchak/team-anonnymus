{"mappings":"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","sources":["src/index.js","src/js/api/fetchWeekly.js","src/js/refs/weeklyRefs.js","src/js/utils/weeklyUtils.js","src/js/markup/weeklyMarkup.js","src/js/components/weekly.js","src/js/components/upcoming.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/hero';\nimport './js/components/weekly';\nimport './js/components/upcoming';\nimport './js/components/modal';\nimport './js/components/footer';\nimport './js/utils/scroll-up';\nimport './js/utils/loader';\n","//FETCH\nimport { BASE_URL } from './apiKey';\n\nasync function fetchData(END_POINT, options) {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT}`, options);\n    const data = await response.json();\n    return data.results.slice(0, 3);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchGenres(options) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}genre/movie/list?language=en`,\n      options\n    );\n    const data = await response.json();\n    return data.genres;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport { fetchData };\nexport { fetchGenres };\n","const weeklyUlRef = document.querySelector('.weekly-list');\nexport { weeklyUlRef };\n","function transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n  return transformedMovies;\n}\n\nexport { transformData };\n","import { transformData } from '../utils/weeklyUtils';\n\nfunction renderMarkup(movieData, genreData) {\n  const transformedData = transformData(movieData, genreData);\n\n  return generateMarkup(transformedData);\n}\n\nfunction addMarkup(element, markup) {\n  element.innerHTML = markup;\n}\n\nfunction generateMarkup(data) {\n  const markup = data\n    .map(\n      movie => ` \n        <li class=\"weekly-item\" data-id=\"${movie.id}\">\n          <div class=\"weekly-wrap\" \">\n              <img class=\"weekly-poster-list\" src=\"https://image.tmdb.org/t/p/w500/${\n                movie.poster\n              }\" alt=\"${movie.title}\" />       \n          <div class=\"weekly-info\">\n              <h3  data-id=\"${movie.id}\" class=\"weekly-info-title\">${\n        movie.title\n      }</h3>\n                  <div class=\"info-movie\">\n                      <p data-id=\"${movie.id} class=\"weekly-info-genre\">${\n        movie.genreFirst\n      },&nbsp ${movie.genreSecond}&nbsp ‚ñè</p>\n                      <p data-id=\"${\n                        movie.id\n                      } class=\"weekly-info-date\">${movie.release_date.slice(\n        0,\n        4\n      )}</p>\n                  </div>\n          </div>\n          </div>     \n      </li>\n       `\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { renderMarkup, addMarkup, generateMarkup };\n","import { fetchData } from '../api/fetchWeekly';\nimport { fetchGenres } from '../api/fetchWeekly';\nimport { weeklyUlRef } from '../refs/weeklyRefs';\nimport { options } from '../api/apiKey';\nimport { selectMovie } from './modal';\n\nimport { renderMarkup, addMarkup } from '../markup/weeklyMarkup';\n\nconst END_POINT = 'trending/all/week?language=en-US';\n\n// WORKSPACE\n\nwindow.addEventListener('load', onPageLoad);\n\n// LISTENERS\nfunction onPageLoad() {\n  const genrePromise = fetchGenres(options);\n\n  fetchData(END_POINT, options).then(movieData => {\n    //console.log(movieData);\n\n    genrePromise.then(genreData => {\n      const markup = renderMarkup(movieData, genreData);\n      addMarkup(weeklyUlRef, markup);\n      weeklyUlRef.addEventListener('click', selectMovie);\n    });\n  });\n}\n","import {\n  onAddRemoveMovie,\n  IsMovieInLibrary,\n} from '../components/modalLocalStorage.js';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT_UPCOMING = 'movie/upcoming';\nconst END_POINT_GENRE = 'genre/movie/list?language=en';\nconst API_KEY = 'api_key=bd0a4499e3f0b036025d12595397227a';\n\nconst upcomingList = document.querySelector('.upcoming-container ');\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZDBhNDQ5OWUzZjBiMDM2MDI1ZDEyNTk1Mzk3MjI3YSIsInN1YiI6IjY0N2YxZDM3Y2FlZjJkMDEzNjJjZDBjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.04GEOyHwNXnOZB4gUWNaiyPlLlOZ0z9Ttfl7T5UFMuk',\n  },\n};\nlet textButton = '';\n\nasync function fetchGenres() {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT_GENRE}`, options);\n    const data = await response.json();\n\n    return data.genres;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchData() {\n  try {\n    const response = await fetch(`${BASE_URL}${END_POINT_UPCOMING}`, options);\n    const data = await response.json();\n\n    return data.results[Math.floor(Math.random() * data.results.length)];\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchMovieDetails() {\n  const movie = await fetchData();\n  const genreData = await fetchGenres();\n\n  movie.genres = movie.genre_ids\n    .map(id => genreData.find(genre => genre.id === id).name)\n    .slice(0, 2)\n    .join(', ');\n\n  return movie;\n}\n\nfunction createMarkup(movie) {\n  let textContent = movie.overview;\n  if (movie.overview.length > 300) {\n    textContent = movie.overview;\n  }\n\n  if (IsMovieInLibrary(movie.id)) {\n    textButton = 'Remove from my library';\n  } else {\n    textButton = 'Add to my library';\n  }\n  const message = `<h3 class=\"upcoming-alert\">Ops! No upcoming films...</h3>`;\n  let filmContent = `\n  \n  <div class =\"upcoming-section-wrap\">\n    <picture class=\"upcoming-poster\">\n    <source media=\"(min-width:768px)\" srcset=\"https://image.tmdb.org/t/p/original${\n      movie.backdrop_path\n    }\">\n    <img src=\"https://image.tmdb.org/t/p/w500${\n      movie.poster_path\n    }\" alt=\"poster_path\" style=\"width:auto;\">\n</picture>\n    <div class=\"upcoming-info-wrap\">\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"info-film\">\n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Release date</p>\n                <p class=\"info-film-resp-release-date\">${movie.release_date.replace(\n                  /^(\\d+)-(\\d+)-(\\d+)$/,\n                  `$3.$2.$1`\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Vote / Votes</p>\n                <p class=\"info-film-votes-count\"><span>${\n                  movie.vote_average\n                }</span><b>/</b><span>${movie.vote_count}</span></p>\n              </div>\n            </div>\n            \n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Popularity</p>\n                <p class=\"info-film-popularity text-color-white\">${Number(\n                  movie.popularity.toFixed(1)\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Genre</p>\n                <p class=\"info-film-genre-style text-color-white genre-padding-bottom\">${\n                  movie.genres\n                }</p>\n              </div>\n            </div> \n             \n        </div>\n    \n        <div class =\"info-film-overview\">\n      <h3 class=\"film-description-title\">ABOUT</h3>\n      <p class=\"film-description\">${textContent}</p>\n      <button class=\"btn js-add-remove-library\" type=\"button\" data-id=\"${\n        movie.id\n      }\">${textButton}</button>\n      </div>\n    </div>\n  </div>`;\n\n  return !movie.results ? filmContent : message;\n}\n\nwindow.addEventListener('load', onPageLoad);\n\nfunction onPageLoad() {\n  fetchMovieDetails().then(movie => {\n    upcomingList.insertAdjacentHTML('beforeend', createMarkup(movie));\n    // –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞\n    const addRemoveBtnRef = document.querySelector('.js-add-remove-library');\n\n    addRemoveBtnRef.addEventListener('click', onAddRemoveMovie);\n  });\n}\n"],"names":["parcelRequire","$bpxeT","$15e1d5de8d44c5fc$export$8134c072fddab6a5","END_POINT","options","$15e1d5de8d44c5fc$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","data","fetch","concat","$ks1QH","BASE_URL","_ctx","sent","json","results","slice","console","log","t0","message","$15e1d5de8d44c5fc$export$e95d448b93b2cdb","$15e1d5de8d44c5fc$var$_fetchGenres","genres","$d74639c227004755$export$1e4302467ae64eb8","document","querySelector","$c9916a4381095b76$export$3ceb62baab058c6b","movieData","genreData","map","movie","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$e8f1cd010089648f$export$add40575555c273c","transformedData","join","$e8f1cd010089648f$export$485cc6bdae71a787","element","markup","innerHTML","window","addEventListener","genrePromise","then","$8BR1R","selectMovie","$151e1b73a1b4c7fb$var$BASE_URL","$151e1b73a1b4c7fb$var$END_POINT_UPCOMING","$151e1b73a1b4c7fb$var$END_POINT_GENRE","$151e1b73a1b4c7fb$var$upcomingList","$151e1b73a1b4c7fb$var$options","method","headers","accept","Authorization","$151e1b73a1b4c7fb$var$textButton","$151e1b73a1b4c7fb$var$fetchGenres","$151e1b73a1b4c7fb$var$_fetchGenres","$151e1b73a1b4c7fb$var$fetchData","$151e1b73a1b4c7fb$var$_fetchData","Math","floor","random","length","$151e1b73a1b4c7fb$var$_fetchMovieDetails","$151e1b73a1b4c7fb$var$fetchMovieDetails","insertAdjacentHTML","textContent","overview","$gSoaZ","IsMovieInLibrary","filmContent","backdrop_path","replace","vote_average","vote_count","Number","popularity","toFixed","$151e1b73a1b4c7fb$var$createMarkup","onAddRemoveMovie"],"version":3,"file":"index.50d7e7a5.js.map"}