{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,aCAA,SAASE,EAAcC,EAAWC,GAgBhC,OAf0BD,EAAUE,KAAIC,IACtC,MACMC,EADWD,EAAME,UACCH,KACtBI,GAAML,EAAUM,MAAKC,GAASA,EAAMF,KAAOA,IAAIG,OAGjD,MAAO,CACLC,aAAcP,EAAMO,aACpBJ,GAAIH,EAAMG,GACVK,MAAOR,EAAMQ,MACbC,OAAQT,EAAMU,YACdC,WAAYV,EAAO,GACnBW,YAAaX,EAAO,GACrB,G,kBCZL,SAASY,EAAahB,EAAWC,GAC/B,MAAMgB,EAAkBlB,EAAcC,EAAWC,GAEjD,OAAsBgB,EASnBf,KACCC,GAAS,+CAC4BA,EAAMG,mIAGjCH,EAAMS,gBACET,EAAMQ,sFAEAR,EAAMG,iCAC5BH,EAAMQ,6FAGsBR,EAAMG,gCAClCH,EAAMW,oBACEX,EAAMY,6DAEEZ,EAAMG,+BACqBH,EAAMO,aAAaQ,MAC9D,EACA,oGAQHC,KAAK,G,CAjCV,SAASC,EAAUC,EAASC,GAC1BD,EAAQE,UAAYD,C,CFHtB,MAAME,EAAaC,SAASC,cAAc,gBAG1CC,OAAOC,iBAAiB,QAGxB,YAIAC,iBACE,IACE,MACM1B,SADsB,EAAAL,EAAAgC,qBACAC,KAAKC,QAAQd,MAAM,EAAG,GAE5Ce,QAAsB,EAAAC,EAAAC,aAItBb,EAASN,EAAab,EAFV8B,EAAcF,KAAK3B,QAGrCgB,EAAUI,EAAYF,GACtBE,EAAWI,iBAAiB,QAASQ,EAAAC,YACvB,CAAd,MAAOC,GAAO,C,CAfhBC,E,IGbF,IAAAC,EAAA3C,EAAA,SCAA4C,G,aAAA5C,EAAA,U,aAIO,SAAS6C,IACd,OAAOD,EAAAE,QAAMC,IAAI,GAAGC,EAAAC,yBAA0B,CAC5CC,OAAQ,CACNC,QAASH,EAAAI,QACTC,SAAU,U,CDDhB,MAAMC,EAAe1B,SAASC,cAAc,wBAE5C,IAAI0B,EAAa,GAEjBzB,OAAOC,iBAAiB,QA2BxB,YAzBAC,iBACE,IACE,MAAMwB,QAAsBX,IACtBvC,EACJkD,EAActB,KAAKC,QACjBsB,KAAKC,MAAMD,KAAKE,SAAWH,EAActB,KAAKC,QAAQyB,SAIpDxD,SADsB,EAAAiC,EAAAC,cACIJ,KAAK3B,OAE/BA,EAASD,EAAME,UAClBH,KAAII,GAAML,EAAUM,MAAKC,GAASA,EAAMF,KAAOA,IAAIG,OACnDS,MAAM,EAAG,GACTC,KAAK,MACRhB,EAAMC,OAASA,EACf+C,EAAaO,mBAAmB,YAapC,SAAsBvD,GACpB,IAAIwD,EAAcxD,EAAMyD,SACpBzD,EAAMyD,SAASH,OAAS,MAC1BE,EAAcxD,EAAMyD,UAIpBR,GADE,EAAAZ,EAAAqB,kBAAiB1D,EAAMG,IACZ,yBAEA,oBAEf,MAAMwD,EAAU,4DAChB,IAAIC,EAAc,sKAId5D,EAAM6D,iEAGN7D,EAAMU,kJAI8BV,EAAMQ,0QAMSR,EAAMO,aAAauD,QAAO,sBAEjE,2OAOA9D,EAAM+D,gEAEpB/D,EAAMgE,ySAQyDC,OACjDjE,EAAMkE,WAAWC,QAAQ,iOAOzBnE,EAAMC,iOASYuD,iFAE5BxD,EAAMG,OACH8C,iDAKT,OAAQjD,EAAM6B,QAAwB8B,EAAdC,C,CAtFuBQ,CAAapE,IAElCsB,SAASC,cAAc,0BAC/BE,iBAAiB,QAASY,EAAAgC,iB,CAC1C,MAAOlC,GACPmC,QAAQC,IAAIpC,EAAMwB,Q,EAKpBa,E","sources":["src/index.js","src/js/components/weekly.js","src/js/utils/weeklyUtils.js","src/js/markup/weeklyMarkup.js","src/js/components/upcoming.js","src/js/api/fetchUpcoming.js"],"sourcesContent":["import './js/utils/theme';\nimport './js/components/header';\nimport './js/components/hero';\nimport './js/components/weekly';\nimport './js/components/upcoming';\nimport './js/components/modal';\nimport './js/components/footer';\nimport './js/utils/scroll-up';\nimport './js/utils/loader';\n","import { getTrendingMovie } from '../api/fetchTranding';\nimport { getGenres } from '../api/fetchGenres';\nimport { transformData } from '../utils/weeklyUtils';\nimport { selectMovie } from './modal';\nimport { renderMarkup, addMarkup } from '../markup/weeklyMarkup';\n\nconst weeklyWrap = document.querySelector('.weekly-list');\n// WORKSPACE\n\nwindow.addEventListener('load', onPageLoad);\n\n// LISTENERS\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n\nasync function fetchMovieDetails() {\n  try {\n    const responseMovie = await getTrendingMovie();\n    const movie = responseMovie.data.results.slice(0, 3);\n\n    const responseGenre = await getGenres();\n\n    const genreData = responseGenre.data.genres;\n\n    const markup = renderMarkup(movie, genreData);\n    addMarkup(weeklyWrap, markup);\n    weeklyWrap.addEventListener('click', selectMovie);\n  } catch (error) {}\n}\n","function transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n  return transformedMovies;\n}\n\nexport { transformData };\n","import { transformData } from '../utils/weeklyUtils';\n\nfunction renderMarkup(movieData, genreData) {\n  const transformedData = transformData(movieData, genreData);\n\n  return generateMarkup(transformedData);\n}\n\nfunction addMarkup(element, markup) {\n  element.innerHTML = markup;\n}\n\nfunction generateMarkup(data) {\n  const markup = data\n    .map(\n      movie => ` \n        <li class=\"weekly-item\" data-id=\"${movie.id}\">\n          <div class=\"weekly-wrap\" \">\n              <img class=\"weekly-poster-list\" src=\"https://image.tmdb.org/t/p/w500/${\n                movie.poster\n              }\" alt=\"${movie.title}\" />       \n          <div class=\"weekly-info\">\n              <h3  data-id=\"${movie.id}\" class=\"weekly-info-title\">${\n        movie.title\n      }</h3>\n                  <div class=\"info-movie\">\n                      <p data-id=\"${movie.id} class=\"weekly-info-genre\">${\n        movie.genreFirst\n      },&nbsp ${movie.genreSecond}&nbsp ▏</p>\n                      <p data-id=\"${\n                        movie.id\n                      } class=\"weekly-info-date\">${movie.release_date.slice(\n        0,\n        4\n      )}</p>\n                  </div>\n          </div>\n          </div>     \n      </li>\n       `\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { renderMarkup, addMarkup, generateMarkup };\n","import {\n  onAddRemoveMovie,\n  IsMovieInLibrary,\n} from '../components/modalLocalStorage.js';\nimport { getGenres } from '../api/fetchGenres.js';\nimport { getUpcoming } from '../api/fetchUpcoming.js';\n\nconst upcomingList = document.querySelector('.upcoming-container ');\n\nlet textButton = '';\n\nwindow.addEventListener('load', onPageLoad);\n\nasync function fetchMovieDetails() {\n  try {\n    const responseMovie = await getUpcoming();\n    const movie =\n      responseMovie.data.results[\n        Math.floor(Math.random() * responseMovie.data.results.length)\n      ];\n\n    const responseGenre = await getGenres();\n    const genreData = responseGenre.data.genres;\n\n    const genres = movie.genre_ids\n      .map(id => genreData.find(genre => genre.id === id).name)\n      .slice(0, 2)\n      .join(', ');\n    movie.genres = genres;\n    upcomingList.insertAdjacentHTML('beforeend', createMarkup(movie));\n    // кнопка добавления удаления фильма\n    const addRemoveBtnRef = document.querySelector('.js-add-remove-library');\n    addRemoveBtnRef.addEventListener('click', onAddRemoveMovie);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n\nfunction createMarkup(movie) {\n  let textContent = movie.overview;\n  if (movie.overview.length > 300) {\n    textContent = movie.overview;\n  }\n\n  if (IsMovieInLibrary(movie.id)) {\n    textButton = 'Remove from my library';\n  } else {\n    textButton = 'Add to my library';\n  }\n  const message = `<h3 class=\"upcoming-alert\">Ops! No upcoming films...</h3>`;\n  let filmContent = ` \n  <div class =\"upcoming-section-wrap\">\n    <picture class=\"upcoming-poster\">\n    <source media=\"(min-width:768px)\" srcset=\"https://image.tmdb.org/t/p/original${\n      movie.backdrop_path\n    }\">\n    <img src=\"https://image.tmdb.org/t/p/w500${\n      movie.poster_path\n    }\" alt=\"poster_path\" style=\"width:auto;\">\n</picture>\n    <div class=\"upcoming-info-wrap\">\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"info-film\">\n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Release date</p>\n                <p class=\"info-film-resp-release-date\">${movie.release_date.replace(\n                  /^(\\d+)-(\\d+)-(\\d+)$/,\n                  `$3.$2.$1`\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Vote / Votes</p>\n                <p class=\"info-film-votes-count\"><span class=\"upcoming-info-span\">${\n                  movie.vote_average\n                }</span ><b>/</b><span class=\"upcoming-info-span\">${\n    movie.vote_count\n  }</span></p>\n              </div>\n            </div>\n            \n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Popularity</p>\n                <p class=\"info-film-popularity text-color-white\">${Number(\n                  movie.popularity.toFixed(1)\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Genre</p>\n                <p class=\"info-film-genre-style text-color-white genre-padding-bottom\">${\n                  movie.genres\n                }</p>\n              </div>\n            </div> \n             \n        </div>\n    \n        <div class =\"info-film-overview\">\n      <h3 class=\"film-description-title\">ABOUT</h3>\n      <p class=\"film-description\">${textContent}</p>\n      <button class=\"btn js-add-remove-library\" type=\"button\" data-id=\"${\n        movie.id\n      }\">${textButton}</button>\n      </div>\n    </div>\n  </div>`;\n\n  return !movie.results ? filmContent : message;\n}\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY } from './apiKey';\n\nexport function getUpcoming() {\n  return axios.get(`${BASE_URL}movie/upcoming`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n}\n"],"names":["parcelRequire","$e6Kky","$3b8d5ab2bfa9425f$export$3ceb62baab058c6b","movieData","genreData","map","movie","genres","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$add57ff5b89d9e56$export$add40575555c273c","transformedData","slice","join","$add57ff5b89d9e56$export$485cc6bdae71a787","element","markup","innerHTML","$83069180f38e8654$var$weeklyWrap","document","querySelector","window","addEventListener","async","getTrendingMovie","data","results","responseGenre","$8tr1y","getGenres","$8IXMh","selectMovie","error","$83069180f38e8654$var$fetchMovieDetails","$7gMLt","$2shzp","$f370a4cf1ca3d60f$export$2cb6491f12c0db0a","default","get","$bkYP9","BASE_URL","params","api_key","API_KEY","language","$2278764e9f3f2129$var$upcomingList","$2278764e9f3f2129$var$textButton","responseMovie","Math","floor","random","length","insertAdjacentHTML","textContent","overview","IsMovieInLibrary","message","filmContent","backdrop_path","replace","vote_average","vote_count","Number","popularity","toFixed","$2278764e9f3f2129$var$createMarkup","onAddRemoveMovie","console","log","$2278764e9f3f2129$var$fetchMovieDetails"],"version":3,"file":"index.9c67e9e2.js.map"}