{"mappings":"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","sources":["src/index.js","src/js/api/fetchWeekly.js","src/js/utils/weeklyUtils.js","src/js/markup/weeklyMarkup.js","src/js/refs/weeklyRefs.js","src/js/components/weekly.js","src/js/api/fetchUpcoming.js","src/js/refs/upcomingRefs.js","src/js/markup/upcomingMarkup.js","src/js/components/upcoming.js"],"sourcesContent":["import './js/utils/theme';\nimport './js/components/header';\nimport './js/components/hero';\nimport './js/components/weekly';\nimport './js/components/upcoming';\nimport './js/components/modal';\nimport './js/components/footer';\nimport './js/utils/scroll-up';\nimport './js/utils/loader';\n","import { renderMarkup, addMarkup } from '../markup/weeklyMarkup';\nimport { getGenres } from '../api/fetchGenres';\nimport { getTrendingMovie } from '../api/fetchTrandingWeek';\nimport { selectMovie } from '../components/modal';\nimport { weeklyUlRef } from '../refs/weeklyRefs';\nexport async function fetchMovieDetails() {\n  try {\n    const responseMovie = await getTrendingMovie();\n    const movie = responseMovie.data.results.slice(0, 3);\n\n    const responseGenre = await getGenres();\n\n    const genreData = responseGenre.data.genres;\n\n    const markup = renderMarkup(movie, genreData);\n    addMarkup(weeklyUlRef, markup);\n    weeklyUlRef.addEventListener('click', selectMovie);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","function transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n  return transformedMovies;\n}\n\nexport { transformData };\n","import { transformData } from '../utils/weeklyUtils';\nimport { addMarkup } from '../utils/addMarkup';\nfunction renderMarkup(movieData, genreData) {\n  const transformedData = transformData(movieData, genreData);\n\n  return generateMarkup(transformedData);\n}\n\nfunction generateMarkup(data) {\n  const markup = data\n    .map(\n      movie => ` \n        <li class=\"weekly-item\" data-id=\"${movie.id}\">\n          <div class=\"weekly-wrap\" \">\n              <img class=\"weekly-poster-img\" src=\"https://image.tmdb.org/t/p/w500/${\n                movie.poster\n              }\" alt=\"${movie.title}\" />       \n          <div class=\"weekly-info\">\n              <h3  data-id=\"${movie.id}\" class=\"weekly-info-title\">${\n        movie.title\n      }</h3>\n                  <div class=\"info-movie\">\n                      <p data-id=\"${movie.id} class=\"weekly-info-genre\">${\n        movie.genreFirst\n      },&nbsp ${movie.genreSecond}&nbsp ‚ñè</p>\n                      <p data-id=\"${\n                        movie.id\n                      } class=\"weekly-info-date\">${movie.release_date.slice(\n        0,\n        4\n      )}</p>\n                  </div>\n          </div>\n          </div>     \n      </li>\n       `\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { renderMarkup, addMarkup, generateMarkup };\n","const weeklyUlRef = document.querySelector('.weekly-list');\nexport { weeklyUlRef };\n","import { fetchMovieDetails } from '../api/fetchWeekly';\n\nwindow.addEventListener('load', onPageLoad);\n\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n","import axios from 'axios';\nimport { getGenres } from '../api/fetchGenres.js';\nimport { BASE_URL, API_KEY } from './apiKey';\nimport { upcomingList } from '../refs/upcomingRefs.js';\nimport { onAddRemoveMovie } from '../components/modalLocalStorage.js';\nimport { createMarkup } from '../markup/upcomingMarkup.js';\nexport function fetchUpcoming() {\n  return axios.get(`${BASE_URL}movie/upcoming`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n}\n\nexport async function fetchMovieDetails() {\n  try {\n    const responseMovie = await fetchUpcoming();\n    const movie =\n      responseMovie.data.results[\n        Math.floor(Math.random() * responseMovie.data.results.length)\n      ];\n\n    const responseGenre = await getGenres();\n    const genreData = responseGenre.data.genres;\n\n    const genres = movie.genre_ids\n      .map(id => genreData.find(genre => genre.id === id).name)\n      .slice(0, 2)\n      .join(', ');\n    movie.genres = genres;\n    upcomingList.insertAdjacentHTML('beforeend', createMarkup(movie));\n\n    const addRemoveBtnRef = document.querySelector('.js-add-remove-library');\n\n    addRemoveBtnRef.addEventListener('click', onAddRemoveMovie);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","export const upcomingList = document.querySelector('.upcoming-container ');\n","import { IsMovieInLibrary } from '../components/modalLocalStorage.js';\n\nlet textButton = '';\n\nexport function createMarkup(movie) {\n  let textContent = movie.overview;\n  if (movie.overview.length > 300) {\n    textContent = movie.overview;\n  }\n\n  if (IsMovieInLibrary(movie.id)) {\n    textButton = 'Remove from my library';\n  } else {\n    textButton = 'Add to my library';\n  }\n  const message = `<h3 class=\"upcoming-alert\">Ops! No upcoming films...</h3>`;\n  let filmContent = ` \n  <div class =\"upcoming-section-wrap\">\n    <picture class=\"upcoming-poster\">\n    <source media=\"(min-width:768px)\" srcset=\"https://image.tmdb.org/t/p/original${\n      movie.backdrop_path\n    }\">\n    <img class=\"upcoming-img\" src=\"https://image.tmdb.org/t/p/w500${\n      movie.poster_path\n    }\" alt=\"${movie.title}\">\n</picture>\n    <div class=\"upcoming-info-wrap\">\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"upcoming-info-film-wrap\">\n            <ul class=\"upcoming-info-film-list\">\n              <li class=\"upcoming-info-film-item\">\n                <p class=\"upcoming-info-film-text\">Release date</p>\n                <p class=\"upcoming-info-film-text release \">${movie.release_date.replace(\n                  /^(\\d+)-(\\d+)-(\\d+)$/,\n                  `$3.$2.$1`\n                )}</p>\n              </li>\n\n              <li class=\"upcoming-info-film-item\">\n                <p class=\"upcoming-info-film-text\">Vote / Votes</p>\n                <p class=\"upcoming-info-film-text\"><span class=\"upcoming-info-film-span\">${\n                  movie.vote_average\n                }</span ><b>/</b><span class=\"upcoming-info-film-span\">${\n    movie.vote_count\n  }</span></p>\n              </li>\n            </ul>\n            \n            <ul class=\"upcoming-info-film-list\">\n              <li class=\"upcoming-info-film-item\">\n                <p class=\"upcoming-info-film-text\">Popularity</p>\n                <p class=\"upcoming-info-film-text white\">${Number(\n                  movie.popularity.toFixed(1)\n                )}</p>\n              </li>\n\n              <li class=\"upcoming-info-film-item\">\n                <p class=\"upcoming-info-film-text\">Genre</p>\n                <p class=\"upcoming-info-film-text white genre-padding-bottom\">${\n                  movie.genres\n                }</p>\n              </li>\n            </ul> \n             \n        </div>\n    \n        <div class =\"upcoming-info-film-overview\">\n      <h3 class=\"upcoming-info-film-title\">ABOUT</h3>\n      <p class=\"upcoming-info-film-description\">${textContent}</p>\n      <button class=\"btn js-add-remove-library\" type=\"button\" data-id=\"${\n        movie.id\n      }\">${textButton}</button>\n      </div>\n    </div>\n  </div>`;\n\n  return !movie.results ? filmContent : message;\n}\n","import { fetchMovieDetails } from '../api/fetchUpcoming.js';\n\nwindow.addEventListener('load', onPageLoad);\n\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n"],"names":["parcelRequire","$bpxeT","$c9916a4381095b76$export$3ceb62baab058c6b","movieData","genreData","map","movie","genres","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$e8f1cd010089648f$export$add40575555c273c","transformedData","concat","slice","join","$d74639c227004755$export$1e4302467ae64eb8","document","querySelector","$15e1d5de8d44c5fc$export$a199ce1860fbd5cd","$15e1d5de8d44c5fc$var$_fetchMovieDetails","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","responseMovie","responseGenre","markup","$43fUj","getTrendingMovie","_ctx","sent","data","results","$6345n","getGenres","$5aGdC","addMarkup","addEventListener","$8BR1R","selectMovie","console","log","t0","message","window","$df730eb70261a584$export$557898e65cb5ae6d","$ce4ee2ff259c5a96$var$textButton","$gSoaZ","$ce4ee2ff259c5a96$export$24783e9f3a24abe4","textContent","overview","length","IsMovieInLibrary","filmContent","backdrop_path","replace","vote_average","vote_count","Number","popularity","toFixed","$8802f99a76aa0e3d$export$cfa1adf389fa621e","$dIxxU","default","get","$ks1QH","BASE_URL","params","api_key","API_KEY","language","$8802f99a76aa0e3d$export$a199ce1860fbd5cd","$8802f99a76aa0e3d$var$_fetchMovieDetails","Math","floor","random","insertAdjacentHTML","onAddRemoveMovie"],"version":3,"file":"index.1162ce37.js.map"}