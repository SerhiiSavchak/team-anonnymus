{"mappings":"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","sources":["src/catalog.js","src/js/components/catalog-list.js"],"sourcesContent":["import './js/components/header';\nimport './js/components/hero';\nimport './js/components/catalog-list';\nimport './js/components/modal';\n\nimport './js/components/footer';\nimport './js/utils/scroll-up';\nimport './js/utils/loader';\n","import { selectMovie } from './modal';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT =\n  'trending/movie/week?language=en-US&include_adult=false&include_video=false&page=1&per_page=10';\nconst STORAGE_KEY = 'ID';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZDBhNDQ5OWUzZjBiMDM2MDI1ZDEyNTk1Mzk3MjI3YSIsInN1YiI6IjY0N2YxZDM3Y2FlZjJkMDEzNjJjZDBjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.04GEOyHwNXnOZB4gUWNaiyPlLlOZ0z9Ttfl7T5UFMuk',\n  },\n};\n\n// REFS\nconst ulRef = document.querySelector('.catalog-list');\nconst searchForm = document.querySelector('.search-form');\nconst searchInput = document.querySelector('.search-form-input');\nconst errorContainer = document.querySelector('.error-container');\nconst btnClear = document.querySelector('.btn-clear');\n\n// WORKSPACE\nwindow.addEventListener('load', onPageLoad);\nsearchForm.addEventListener('submit', onSearchSubmit);\nbtnClear.addEventListener('click', onBtnClearClick);\n\n// LISTENER\nfunction onPageLoad() {\n  const screenWidth = window.innerWidth;\n  let perPage;\n\n  if (screenWidth >= 768) {\n    perPage = 20;\n  } else {\n    perPage = 10;\n  }\n\n  const endpoint = `trending/movie/week?language=en-US&include_adult=false&include_video=false&page=1&per_page=${perPage}`;\n\n  fetchData(endpoint, options).then(response => {\n    renderMarkup(response.slice(0, perPage)).then(markup => {\n      addMarkup(ulRef, markup);\n      ulRef.addEventListener('click', selectMovie);\n    });\n  });\n}\n\nsearchInput.addEventListener('input', onCatalogInput);\nfunction onSearchSubmit(event) {\n  event.preventDefault();\n  const searchValue = searchInput.value.trim();\n\n  let perPage;\n\n  if (window.innerWidth >= 768) {\n    perPage = 20;\n  } else {\n    perPage = 10;\n  }\n\n  if (searchValue !== '') {\n    const searchEndpoint = `search/movie?query=${searchValue}&include_adult=false&language=en-US&page=1&per_page=${perPage}`;\n\n    fetchData(searchEndpoint, options).then(response => {\n      if (response.length !== 0) {\n        renderMarkup(response.slice(0, perPage)).then(markup => {\n          addMarkup(ulRef, markup);\n        });\n      } else\n        errorContainer.innerHTML = `<p class=\"catalog-error-text\">OOPS...<br>\n      We are very sorry!<br>\n      We don’t have any results matching your search.</p>`;\n    });\n  }\n}\n\nfunction onBtnClearClick(evt) {\n  searchInput.value = '';\n}\n\nfunction onCatalogInput(evt) {\n  if (evt.target.value.length === 0) {\n    btnClear.style.display = 'none';\n    return;\n  }\n  btnClear.style.display = 'block';\n}\n\n// FETCH\nasync function fetchData(endpoint, options) {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`, options);\n    const data = await response.json();\n    return data.results.slice(0, 20);\n  } catch (error) {\n    console.log(error);\n    return (errorContainer.innerHTML = `<p class=\"catalog-error-text\">OOPS...<br>\n    We are very sorry!<br>\n    We don’t have any results matching your search.</p>`);\n  }\n}\n\nasync function fetchGenres(options) {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?language=en',\n    options\n  );\n  const data = await response.json();\n  return data.genres;\n}\n\n// MARKUP\nfunction renderMarkup(movieData) {\n  return fetchGenres(options).then(genreData => {\n    const transformedData = transformData(movieData, genreData);\n\n    return generateMarkup(transformedData);\n  });\n}\n\nfunction generateMarkup(movie) {\n  const markup = movie\n    .map(\n      movie => `<li data-id=\"${movie.id}\" class=\"catalog-movie\">\n        <div class=\"catalog-item-link\" href=\"\">\n            <img class=\"catalog-list-img\" src=\"https://image.tmdb.org/t/p/w500${\n              movie.poster\n            }\" alt=\"${movie.title}\" />\n            <div class=\"catalog-movie-desc\">\n            <p  class=\"catalog-item-title\" data-id=\"${movie.id}\">${\n        movie.title\n      }</p>\n            <p class=\"catalog-item-movie\" data-id=\"${movie.id}\" >\n                ${movie.genreFirst}, ${movie.genreSecond} | \n                <span data-id=\"${movie.id} class=\"catalog-item-date\">\n                    ${movie.release_date.slice(0, 4)}\n                </span> \n            </p>\n            </div>\n            </div> \n        </li>`\n    )\n    .join('');\n  return markup;\n}\n\nfunction addMarkup(element, markup) {\n  element.innerHTML = markup;\n}\n\n// UTILS\nfunction transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n\n  return transformedMovies;\n}\n"],"names":["parcelRequire","$bpxeT","$3bd1cca3f426e70f$var$BASE_URL","$3bd1cca3f426e70f$var$options","method","headers","accept","Authorization","$3bd1cca3f426e70f$var$ulRef","document","querySelector","$3bd1cca3f426e70f$var$searchForm","$3bd1cca3f426e70f$var$searchInput","$3bd1cca3f426e70f$var$errorContainer","$3bd1cca3f426e70f$var$btnClear","$3bd1cca3f426e70f$var$fetchData","endpoint","options1","$3bd1cca3f426e70f$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","data","fetch","concat","_ctx","sent","json","results","slice","console","log","t0","innerHTML","$3bd1cca3f426e70f$var$_fetchGenres","options2","genres","$3bd1cca3f426e70f$var$renderMarkup","movieData","$3bd1cca3f426e70f$var$fetchGenres","then","genreData","transformedData","map","movie","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$3bd1cca3f426e70f$var$transformData","join","$3bd1cca3f426e70f$var$addMarkup","element","markup","window","addEventListener","perPage","innerWidth","$8BR1R","selectMovie","event","preventDefault","searchValue","value","trim","length","evt","target","style","display"],"version":3,"file":"catalog.a5352814.js.map"}