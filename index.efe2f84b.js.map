{"mappings":"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","sources":["src/index.js","src/js/components/weekly.js","src/js/utils/weeklyUtils.js","src/js/markup/weeklyMarkup.js","src/js/components/upcoming.js","src/js/api/fetchUpcoming.js"],"sourcesContent":["import './js/utils/theme';\nimport './js/components/header';\nimport './js/components/hero';\nimport './js/components/weekly';\nimport './js/components/upcoming';\nimport './js/components/modal';\nimport './js/components/footer';\nimport './js/utils/scroll-up';\nimport './js/utils/loader';\n","import { getTrendingMovie } from '../api/fetchTranding';\nimport { getGenres } from '../api/fetchGenres';\nimport { transformData } from '../utils/weeklyUtils';\nimport { selectMovie } from './modal';\nimport { renderMarkup, addMarkup } from '../markup/weeklyMarkup';\n\nconst weeklyWrap = document.querySelector('.weekly-list');\n// WORKSPACE\n\nwindow.addEventListener('load', onPageLoad);\n\n// LISTENERS\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n\nasync function fetchMovieDetails() {\n  try {\n    const responseMovie = await getTrendingMovie();\n    const movie = responseMovie.data.results.slice(0, 3);\n\n    const responseGenre = await getGenres();\n\n    const genreData = responseGenre.data.genres;\n\n    const markup = renderMarkup(movie, genreData);\n    addMarkup(weeklyWrap, markup);\n    weeklyWrap.addEventListener('click', selectMovie);\n  } catch (error) {}\n}\n","function transformData(movieData, genreData) {\n  const transformedMovies = movieData.map(movie => {\n    const genreIds = movie.genre_ids;\n    const genres = genreIds.map(\n      id => genreData.find(genre => genre.id === id).name\n    );\n\n    return {\n      release_date: movie.release_date,\n      id: movie.id,\n      title: movie.title,\n      poster: movie.poster_path,\n      genreFirst: genres[0],\n      genreSecond: genres[1],\n    };\n  });\n  return transformedMovies;\n}\n\nexport { transformData };\n","import { transformData } from '../utils/weeklyUtils';\n\nfunction renderMarkup(movieData, genreData) {\n  const transformedData = transformData(movieData, genreData);\n\n  return generateMarkup(transformedData);\n}\n\nfunction addMarkup(element, markup) {\n  element.innerHTML = markup;\n}\n\nfunction generateMarkup(data) {\n  const markup = data\n    .map(\n      movie => ` \n        <li class=\"weekly-item\" data-id=\"${movie.id}\">\n          <div class=\"weekly-wrap\" \">\n              <img class=\"weekly-poster-list\" src=\"https://image.tmdb.org/t/p/w500/${\n                movie.poster\n              }\" alt=\"${movie.title}\" />       \n          <div class=\"weekly-info\">\n              <h3  data-id=\"${movie.id}\" class=\"weekly-info-title\">${\n        movie.title\n      }</h3>\n                  <div class=\"info-movie\">\n                      <p data-id=\"${movie.id} class=\"weekly-info-genre\">${\n        movie.genreFirst\n      },&nbsp ${movie.genreSecond}&nbsp ▏</p>\n                      <p data-id=\"${\n                        movie.id\n                      } class=\"weekly-info-date\">${movie.release_date.slice(\n        0,\n        4\n      )}</p>\n                  </div>\n          </div>\n          </div>     \n      </li>\n       `\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { renderMarkup, addMarkup, generateMarkup };\n","import {\n  onAddRemoveMovie,\n  IsMovieInLibrary,\n} from '../components/modalLocalStorage.js';\nimport { getGenres } from '../api/fetchGenres.js';\nimport { getUpcoming } from '../api/fetchUpcoming.js';\n\nconst upcomingList = document.querySelector('.upcoming-container ');\n\nlet textButton = '';\n\nwindow.addEventListener('load', onPageLoad);\n\nasync function fetchMovieDetails() {\n  try {\n    const responseMovie = await getUpcoming();\n    const movie =\n      responseMovie.data.results[\n        Math.floor(Math.random() * responseMovie.data.results.length)\n      ];\n\n    const responseGenre = await getGenres();\n    const genreData = responseGenre.data.genres;\n\n    const genres = movie.genre_ids\n      .map(id => genreData.find(genre => genre.id === id).name)\n      .slice(0, 2)\n      .join(', ');\n    movie.genres = genres;\n    upcomingList.insertAdjacentHTML('beforeend', createMarkup(movie));\n    // кнопка добавления удаления фильма\n    const addRemoveBtnRef = document.querySelector('.js-add-remove-library');\n    addRemoveBtnRef.addEventListener('click', onAddRemoveMovie);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onPageLoad() {\n  fetchMovieDetails();\n}\n\nfunction createMarkup(movie) {\n  let textContent = movie.overview;\n  if (movie.overview.length > 300) {\n    textContent = movie.overview;\n  }\n\n  if (IsMovieInLibrary(movie.id)) {\n    textButton = 'Remove from my library';\n  } else {\n    textButton = 'Add to my library';\n  }\n  const message = `<h3 class=\"upcoming-alert\">Ops! No upcoming films...</h3>`;\n  let filmContent = ` \n  <div class =\"upcoming-section-wrap\">\n    <picture class=\"upcoming-poster\">\n    <source media=\"(min-width:768px)\" srcset=\"https://image.tmdb.org/t/p/original${\n      movie.backdrop_path\n    }\">\n    <img src=\"https://image.tmdb.org/t/p/w500${\n      movie.poster_path\n    }\" alt=\"poster_path\" style=\"width:auto;\">\n</picture>\n    <div class=\"upcoming-info-wrap\">\n        <h3 class=\"upcoming-film-title\">${movie.title}</h3>\n        \n        <div class =\"info-film\">\n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Release date</p>\n                <p class=\"info-film-resp-release-date\">${movie.release_date.replace(\n                  /^(\\d+)-(\\d+)-(\\d+)$/,\n                  `$3.$2.$1`\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Vote / Votes</p>\n                <p class=\"info-film-votes-count\"><span class=\"upcoming-info-span\">${\n                  movie.vote_average\n                }</span ><b>/</b><span class=\"upcoming-info-span\">${\n    movie.vote_count\n  }</span></p>\n              </div>\n            </div>\n            \n            <div class=\"info-film-block\">\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Popularity</p>\n                <p class=\"info-film-popularity text-color-white\">${Number(\n                  movie.popularity.toFixed(1)\n                )}</p>\n              </div>\n\n              <div class=\"info-film-item\">\n                <p class=\"info-film-item-text\">Genre</p>\n                <p class=\"info-film-genre-style text-color-white genre-padding-bottom\">${\n                  movie.genres\n                }</p>\n              </div>\n            </div> \n             \n        </div>\n    \n        <div class =\"info-film-overview\">\n      <h3 class=\"film-description-title\">ABOUT</h3>\n      <p class=\"film-description\">${textContent}</p>\n      <button class=\"btn js-add-remove-library\" type=\"button\" data-id=\"${\n        movie.id\n      }\">${textButton}</button>\n      </div>\n    </div>\n  </div>`;\n\n  return !movie.results ? filmContent : message;\n}\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY } from './apiKey';\n\nexport function getUpcoming() {\n  return axios.get(`${BASE_URL}movie/upcoming`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n}\n"],"names":["parcelRequire","$bpxeT","$c9916a4381095b76$export$3ceb62baab058c6b","movieData","genreData","map","movie","genres","genre_ids","id","find","genre","name","release_date","title","poster","poster_path","genreFirst","genreSecond","$e8f1cd010089648f$export$add40575555c273c","transformedData","concat","slice","join","$e8f1cd010089648f$export$485cc6bdae71a787","element","markup","innerHTML","$aaf9b47dbc5057fd$var$weeklyWrap","document","querySelector","$aaf9b47dbc5057fd$var$_fetchMovieDetails","$parcel$interopDefault","$2TvXO","mark","_callee","responseMovie","responseGenre","$kVZMu","getTrendingMovie","_ctx","sent","data","results","$6345n","getGenres","addEventListener","$8BR1R","selectMovie","apply","this","arguments","window","$aaf9b47dbc5057fd$var$fetchMovieDetails","$dIxxU","$8802f99a76aa0e3d$export$2cb6491f12c0db0a","default","get","$ks1QH","BASE_URL","params","api_key","API_KEY","language","$151e1b73a1b4c7fb$var$upcomingList","$151e1b73a1b4c7fb$var$textButton","$151e1b73a1b4c7fb$var$_fetchMovieDetails","Math","floor","random","length","insertAdjacentHTML","$151e1b73a1b4c7fb$var$createMarkup","$gSoaZ","onAddRemoveMovie","console","log","t0","message","textContent","overview","IsMovieInLibrary","filmContent","backdrop_path","replace","vote_average","vote_count","Number","popularity","toFixed","$151e1b73a1b4c7fb$var$fetchMovieDetails"],"version":3,"file":"index.efe2f84b.js.map"}